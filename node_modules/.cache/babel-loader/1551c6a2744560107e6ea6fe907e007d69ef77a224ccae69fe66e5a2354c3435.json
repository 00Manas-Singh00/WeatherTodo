{"ast":null,"code":"var _jsxFileName = \"/Users/manas/Desktop/quadb/src/components/TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TaskInput from './Tasks/TaskInput';\nimport TaskList from './Tasks/TaskList';\nimport WeatherWidget from './Weather/WeatherWidget';\nimport { fetchWeather } from '../redux/Actions/weatherActions';\nimport './TodoApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    loading,\n    error\n  } = useSelector(state => state.weather);\n  useEffect(() => {\n    // Get user's location for weather data\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        dispatch(fetchWeather(position.coords.latitude, position.coords.longitude));\n      }, () => {\n        // Default to a location if geolocation fails\n        dispatch(fetchWeather(40.7128, -74.0060)); // New York coordinates\n      });\n    } else {\n      dispatch(fetchWeather(40.7128, -74.0060)); // New York coordinates\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || 'User', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Organize your tasks efficiently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(WeatherWidget, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error loading weather data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"8JFGLeaoopgXMdZRj37yRVL++j0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","TaskInput","TaskList","WeatherWidget","fetchWeather","jsxDEV","_jsxDEV","TodoApp","_s","dispatch","user","state","auth","loading","error","weather","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manas/Desktop/quadb/src/components/TodoApp.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TaskInput from './Tasks/TaskInput';\nimport TaskList from './Tasks/TaskList';\nimport WeatherWidget from './Weather/WeatherWidget';\nimport { fetchWeather } from '../redux/Actions/weatherActions';\nimport './TodoApp.css';\n\nconst TodoApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(state => state.auth);\n  const { loading, error } = useSelector(state => state.weather);\n\n  useEffect(() => {\n    // Get user's location for weather data\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          dispatch(fetchWeather(position.coords.latitude, position.coords.longitude));\n        },\n        () => {\n          // Default to a location if geolocation fails\n          dispatch(fetchWeather(40.7128, -74.0060)); // New York coordinates\n        }\n      );\n    } else {\n      dispatch(fetchWeather(40.7128, -74.0060)); // New York coordinates\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"todo-app\">\n      <div className=\"welcome-header\">\n        <h1>Welcome, {user?.name || 'User'}!</h1>\n        <p>Organize your tasks efficiently</p>\n      </div>\n\n      <div className=\"todo-content\">\n        <div className=\"todo-main\">\n          <TaskInput />\n          <TaskList />\n        </div>\n        <div className=\"todo-sidebar\">\n          <WeatherWidget />\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">Error loading weather data: {error}</div>}\n    </div>\n  );\n};\n\nexport default TodoApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}